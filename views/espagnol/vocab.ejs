<!DOCTYPE html>
<html lang="fr">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <!-- Base URL pour toutes les URLs relatives -->
  <base href="/espagnol/">
  <title>Apprendre l'espagnol</title>
  <!-- Bootstrap 5 -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <!-- Quill CSS -->
  <link href="https://cdn.quilljs.com/1.3.7/quill.snow.css" rel="stylesheet">
  <!-- FontAwesome -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
  <!-- Google Fonts - Roboto -->
  <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700&display=swap">
 
  <style>
    :root {
      --primary-color: #3f51b5;
      --secondary-color: #ff4081;
      --background-color: #f8f9fa;
      --card-bg: #ffffff;
      --text-color: #333333;
      --border-radius: 8px;
      --box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }
    
    body {
      font-family: 'Roboto', sans-serif;
      background-color: var(--background-color);
      color: var(--text-color);
      line-height: 1.6;
    }
    
    .navbar {
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }
    
    .container-main {
      max-width: 1200px;
      margin: 0 auto;
      padding: 20px;
    }
    
    .page-title {
      font-weight: 700;
      color: var(--primary-color);
      margin-bottom: 1.5rem;
      text-align: center;
    }
    
    /* Cards */
    .card-custom {
      background-color: var(--card-bg);
      border-radius: var(--border-radius);
      box-shadow: var(--box-shadow);
      margin-bottom: 20px;
      border: none;
      transition: transform 0.2s, box-shadow 0.2s;
    }
    
    .card-custom:hover {
      transform: translateY(-3px);
      box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);
    }
    
    .card-header-custom {
      background-color: rgba(63, 81, 181, 0.05);
      border-bottom: 1px solid #eee;
      padding: 15px 20px;
      border-radius: var(--border-radius) var(--border-radius) 0 0;
    }
    
    .card-body-custom {
      padding: 20px;
    }
    
    /* Buttons */
    .btn-custom-primary {
      background-color: var(--primary-color);
      color: white;
      border: none;
      border-radius: 4px;
      padding: 8px 16px;
      font-weight: 500;
      transition: all 0.3s;
    }
    
    .btn-custom-primary:hover {
      background-color: #303f9f;
      color: white;
      transform: translateY(-2px);
      box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
    }
    
    .btn-custom-secondary {
      background-color: var(--secondary-color);
      color: white;
      border: none;
      border-radius: 4px;
      padding: 8px 16px;
      font-weight: 500;
      transition: all 0.3s;
    }
    
    .btn-custom-secondary:hover {
      background-color: #e91e63;
      color: white;
      transform: translateY(-2px);
      box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
    }
    
    /* Tags */
    .tag-custom {
      display: inline-block;
      background-color: #f1f3f9;
      color: var(--primary-color);
      padding: 5px 12px;
      margin: 3px;
      border-radius: 20px;
      font-size: 0.85rem;
      transition: all 0.3s;
      text-decoration: none;
    }
    
    .tag-custom:hover, .tag-custom.active {
      background-color: var(--primary-color);
      color: white;
      text-decoration: none;
    }
    
    /* Tables */
    .table-custom {
      width: 100%;
      border-collapse: collapse;
      border-radius: var(--border-radius);
      overflow: hidden;
      background-color: white;
      box-shadow: var(--box-shadow);
    }
    
    .table-custom th {
      background-color: rgba(63, 81, 181, 0.1);
      color: var(--primary-color);
      padding: 15px;
      text-align: left;
      font-weight: 600;
    }
    
    .table-custom td {
      padding: 12px 15px;
      border-top: 1px solid #eee;
      vertical-align: middle;
    }
    
    .table-custom tr:hover {
      background-color: rgba(63, 81, 181, 0.05);
    }
    
    /* Star Rating */
    .star-rating-custom {
      display: flex;
    }
    
    .star-rating-custom .star {
      font-size: 20px;
      cursor: pointer;
      color: #d4d4d4;
      margin-right: 2px;
    }
    
    .star-rating-custom .star.selected {
      color: #ffc107;
    }
    
    /* Forms */
    .form-group-custom {
      margin-bottom: 20px;
    }
    
    .form-control-custom {
      display: block;
      width: 100%;
      padding: 10px;
      font-size: 1rem;
      border: 1px solid #ddd;
      border-radius: 4px;
      transition: border-color 0.3s, box-shadow 0.3s;
    }
    
    .form-control-custom:focus {
      border-color: var(--primary-color);
      outline: none;
      box-shadow: 0 0 0 3px rgba(63, 81, 181, 0.2);
    }
    
    /* Pagination */
    .pagination-custom {
      display: flex;
      justify-content: center;
      flex-wrap: wrap;
      margin: 30px 0;
    }
    
    .pagination-custom a, .pagination-custom span {
      display: inline-block;
      margin: 0 5px;
      padding: 8px 12px;
      color: var(--primary-color);
      background-color: white;
      border-radius: 4px;
      text-decoration: none;
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
      transition: all 0.3s;
    }
    
    .pagination-custom a:hover {
      background-color: var(--primary-color);
      color: white;
    }
    
    .pagination-custom span {
      background-color: var(--primary-color);
      color: white;
      font-weight: bold;
    }
    
    /* Footer */
    .footer-custom {
      background-color: #f1f1f1;
      padding: 30px 0;
      margin-top: 50px;
      color: #666;
    }
    
    .footer-custom a {
      color: #666;
      text-decoration: none;
      transition: color 0.3s;
    }
    
    .footer-custom a:hover {
      color: var(--primary-color);
    }
    
  /* Modal */
    
    @keyframes modalFadeIn {
      from {opacity: 0; transform: translateY(-20px);}
      to {opacity: 1; transform: translateY(0);}
    }
    
    .close {
      color: #aaa;
      float: right;
      font-size: 28px;
      font-weight: bold;
      cursor: pointer;
      transition: color 0.3s;
    }
    
    .close:hover {
      color: var(--text-color);
    }
    
    /* Tab styling */
    .nav-tabs .nav-link {
      color: var(--text-color);
      font-weight: 500;
      border: none;
      padding: 10px 20px;
    }
    
    .nav-tabs .nav-link.active {
      color: var(--primary-color);
      border-bottom: 3px solid var(--primary-color);
      background-color: transparent;
    }
    
    .nav-tabs .nav-link:hover:not(.active) {
      border-bottom: 3px solid #ccc;
    }
    
    /* Action buttons */
    .action-btn {
      border: none;
      background: none;
      font-size: 1.2rem;
      cursor: pointer;
      transition: all 0.3s;
    }
    
    .action-btn.edit {
      color: var(--primary-color);
    }
    
    .action-btn.delete {
      color: #dc3545;
    }
    
    .action-btn:hover {
      transform: translateY(-2px);
    }
    
    /* Ensure the editor has a minimum height */
    .ql-editor {
      min-height: 150px;
    }
    
    /* Responsive adjustments */
    @media (max-width: 768px) {
      .table-responsive {
        overflow-x: auto;
      }
      
      .pagination-custom a, .pagination-custom span {
        padding: 6px 10px;
        margin: 2px;
      }
    }
  </style>
</head>
<body>
  <!-- Navbar -->
<nav class="navbar navbar-expand-lg navbar-dark bg-primary mb-4">
  <div class="container-fluid">
    <a class="navbar-brand" href="/">
      <i class="fas fa-language"></i> Apprendre l'Espagnol
    </a>
    <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarMain" aria-controls="navbarMain" aria-expanded="false" aria-label="Toggle navigation">
      <span class="navbar-toggler-icon"></span>
    </button>
    <div class="collapse navbar-collapse" id="navbarMain">
      <ul class="navbar-nav me-auto mb-2 mb-lg-0">
        <li class="nav-item">
          <a class="nav-link" href="/espagnol/"><i class="fas fa-book"></i> Vocabulaire</a>
        </li>
        <li class="nav-item">
          <a class="nav-link" href="/espagnol/flashcard"><i class="fas fa-clone"></i> Flash Cards</a>
        </li>
        <li class="nav-item">
          <a class="nav-link" href="/espagnol/dialogues"><i class="fas fa-comments"></i> Dialogues</a>
        </li>
        <li class="nav-item">
          <a class="nav-link" href="/espagnol/stories"><i class="fas fa-book-open"></i> Histoires</a>
        </li>
      </ul>
    </div>
  </div>
</nav>

  <div class="container container-main">
    <h1 class="page-title"><i class="fas fa-language me-2"></i>Apprendre l'espagnol</h1>
    <% if (typeof messages !== 'undefined' && messages.length > 0) { %>
      <% messages.forEach(function(msg) { %>
        <div class="alert alert-<%= msg.category %> mt-3"><%= msg.message %></div>
      <% }); %>
    <% } %>
  
    <!-- Actions principales -->
    <div class="d-flex justify-content-between align-items-center mb-4">
      <a href="/espagnol/bulk_add" class="btn btn-custom-primary">
        <i class="fas fa-plus-circle me-2"></i>Ajouter plusieurs mots
      </a>
      <a href="/espagnol/admin/tags" class="btn btn-outline-primary">
        <i class="fas fa-tags me-2"></i>GÃ©rer les tags
      </a>
    </div>

    <!-- Tabs navigation -->
    <ul class="nav nav-tabs mb-4" id="mainTab" role="tablist">
      <li class="nav-item" role="presentation">
        <button class="nav-link active" id="vocabulary-tab" data-bs-toggle="tab" data-bs-target="#vocabulary" type="button" role="tab" aria-controls="vocabulary" aria-selected="true">
          <i class="fas fa-list me-2"></i>Liste de vocabulaire
        </button>
      </li>
      <li class="nav-item" role="presentation">
        <button class="nav-link" id="add-word-tab" data-bs-toggle="tab" data-bs-target="#add-word" type="button" role="tab" aria-controls="add-word" aria-selected="false">
          <i class="fas fa-plus me-2"></i>Ajouter un mot
        </button>
      </li>
    </ul>

    <div class="tab-content" id="mainTabContent">
      <!-- Onglet vocabulaire -->
      <div class="tab-pane fade show active" id="vocabulary" role="tabpanel" aria-labelledby="vocabulary-tab">
        <!-- Filtres -->
        <div class="card card-custom mb-4">
          <div class="card-header-custom">
            <h4 class="mb-0"><i class="fas fa-filter me-2"></i>Filtres</h4>
          </div>
          <div class="card-body-custom">
            <div class="row">
              <div class="col-md-6 mb-3">
                <h5>Filtrer par tag :</h5>
                <div class="d-flex flex-wrap">
                  <a href="/espagnol/?<% if (rating_filter) { %>rating=<%= rating_filter %><% } %>" class="tag-custom <% if (!tag_filter) { %>active<% } %>">Tous</a>
                  <% all_tags.forEach(function(t) { %>
                    <a href="/espagnol/?tag=<%= t %><% if (rating_filter) { %>&rating=<%= rating_filter %><% } %>" class="tag-custom <% if (tag_filter === t) { %>active<% } %>"><%= t %></a>
                  <% }); %>
                </div>
              </div>
              <div class="col-md-6 mb-3">
                <h5>Filtrer par note :</h5>
                <div class="d-flex flex-wrap">
                  <a href="/espagnol/?<% if (tag_filter) { %>tag=<%= tag_filter %><% } %>" class="tag-custom <% if (!rating_filter) { %>active<% } %>">Tous</a>
                  <a href="/espagnol/?rating=1<% if (tag_filter) { %>&tag=<%= tag_filter %><% } %>" class="tag-custom <% if (rating_filter === '1') { %>active<% } %>">1 â</a>
                  <a href="/espagnol/?rating=2<% if (tag_filter) { %>&tag=<%= tag_filter %><% } %>" class="tag-custom <% if (rating_filter === '2') { %>active<% } %>">2 â</a>
                  <a href="/espagnol/?rating=3<% if (tag_filter) { %>&tag=<%= tag_filter %><% } %>" class="tag-custom <% if (rating_filter === '3') { %>active<% } %>">3 â</a>
                  <a href="/espagnol/?rating=4<% if (tag_filter) { %>&tag=<%= tag_filter %><% } %>" class="tag-custom <% if (rating_filter === '4') { %>active<% } %>">4 â</a>
                </div>
              </div>
            </div>
            
            <div class="d-flex justify-content-between align-items-center mt-3">
              <!-- Mode Flash Card -->
              <a href="/espagnol/flashcard?tag=<%= tag_filter %>&rating=<%= rating_filter %>" class="btn btn-custom-secondary">
                <i class="fas fa-clone me-2"></i>Mode Flash Card
              </a>
              
              <!-- SÃ©lecteur de voix -->
              <div class="d-flex align-items-center">
                <label for="voice-selector" class="me-2"><strong>Voix :</strong></label>
                <select id="voice-selector" class="form-select" style="width: auto;" onchange="setPollyVoice(this.value)">
                  <option value="Lucia">Lucia (Femme)</option>
                  <option value="Enrique">Enrique (Homme)</option>
                  <option value="Conchita">Conchita (Femme)</option>
                </select>
              </div>
            </div>
          </div>
        </div>

<div class="d-flex justify-content-between align-items-center mt-4">
  <!-- Recherche de mots avec filtre instantanÃ© -->
  <div class="search-container position-relative" style="width: 300px;">
    <input type="text" id="word-search" class="form-control" placeholder="Rechercher un mot..." autocomplete="off">
    <i class="fas fa-search position-absolute" style="right: 10px; top: 10px; color: #6c757d;"></i>
    <div id="search-status" class="mt-2 small text-muted" style="display: none;"></div>
  </div>
  
  <!-- ContrÃ´les de tri -->
  <div class="btn-group">
    <button id="sort-az" class="btn btn-outline-primary">
      <i class="fas fa-sort-alpha-down me-1"></i>A-Z
    </button>
    <button id="sort-za" class="btn btn-outline-primary">
      <i class="fas fa-sort-alpha-up-alt me-1"></i>Z-A
    </button>
  </div>
</div>

<!-- Script pour le filtre de recherche instantanÃ© et le tri par ordre alphabÃ©tique -->
<script>
  document.addEventListener('DOMContentLoaded', function() {
    // ------- Fonction de recherche instantanÃ©e -------
    const searchInput = document.getElementById('word-search');
    const searchStatus = document.getElementById('search-status');
    const table = document.getElementById('vocab-table');
    let allRows = [];
    let originalRowContent = []; // Stocker le HTML original de chaque cellule

    // Capturer toutes les lignes du tableau au chargement
    if (table) {
      allRows = Array.from(table.querySelectorAll('tbody tr'));
      
      // Sauvegarder l'Ã©tat d'affichage original et le contenu de chaque ligne
      originalRowContent = allRows.map(row => {
        const firstCell = row.querySelector('td:first-child');
        return {
          display: row.style.display,
          html: firstCell ? firstCell.innerHTML : ''
        };
      });
    }

    // ÃvÃ©nement pour la recherche "en direct" qui filtre directement le tableau
    if (searchInput) {
      searchInput.addEventListener('input', function() {
        const searchTerm = this.value.trim().toLowerCase();
        
        // Si le champ de recherche est vide, rÃ©initialiser le tableau
        if (!searchTerm) {
          // RÃ©initialiser toutes les lignes Ã  leur Ã©tat d'origine
          allRows.forEach((row, index) => {
            row.style.display = originalRowContent[index].display || '';
            row.classList.remove('search-highlight');
            
            // Restaurer le HTML original de la premiÃ¨re cellule
            const firstCell = row.querySelector('td:first-child');
            if (firstCell) {
              firstCell.innerHTML = originalRowContent[index].html;
            }
          });
          
          searchStatus.style.display = 'none';
          return;
        }
        
        // Compter les correspondances
        let matchCount = 0;
        
        // Filtrer les lignes du tableau en temps rÃ©el
        allRows.forEach((row, index) => {
          const wordCell = row.querySelector('td:first-child');
          const wordText = wordCell.textContent.toLowerCase();
          
          if (wordText.includes(searchTerm)) {
            // Afficher cette ligne
            row.style.display = '';
            matchCount++;
            
            // Mettre en surbrillance la partie correspondante
            const originalHTML = originalRowContent[index].html;
            const regex = new RegExp(`(${escapeRegex(searchTerm)})`, 'gi');
            
            // Utiliser une approche plus sÃ©curitaire pour remplacer uniquement le texte visible
            // et non les balises HTML
            let htmlWithMark = originalHTML;
            const textContent = wordCell.textContent;
            const matches = textContent.match(regex);
            
            if (matches) {
              matches.forEach(match => {
                // Assurer que nous remplaÃ§ons seulement le texte et non les balises
                htmlWithMark = htmlWithMark.replace(
                  new RegExp(escapeRegex(match), 'g'), 
                  `<mark class="bg-light text-primary">${match}</mark>`
                );
              });
              wordCell.innerHTML = htmlWithMark;
            }
            
            // Ajouter une classe pour l'animation
            row.classList.add('search-highlight');
          } else {
            // Masquer cette ligne
            row.style.display = 'none';
            row.classList.remove('search-highlight');
          }
        });
        
        // Afficher le statut de la recherche
        if (matchCount > 0) {
          searchStatus.textContent = `${matchCount} mot${matchCount > 1 ? 's' : ''} trouvÃ©${matchCount > 1 ? 's' : ''}`;
          searchStatus.style.display = 'block';
        } else {
          searchStatus.textContent = 'Aucun mot trouvÃ©';
          searchStatus.style.display = 'block';
        }
      });
      
      // Ajouter un Ã©vÃ©nement pour restaurer le contenu original lorsque l'on efface la recherche
      searchInput.addEventListener('search', function() {
        if (!this.value) {
          // Restaurer le contenu original de toutes les cellules
          allRows.forEach((row, index) => {
            const wordCell = row.querySelector('td:first-child');
            
            // Restaurer directement le HTML original stockÃ©
            if (wordCell) {
              wordCell.innerHTML = originalRowContent[index].html;
            }
            
            // Restaurer l'affichage
            row.style.display = originalRowContent[index].display || '';
            row.classList.remove('search-highlight');
          });
          
          searchStatus.style.display = 'none';
        }
      });
      
      // Ãchapper les caractÃ¨res spÃ©ciaux pour la regex
      function escapeRegex(string) {
        return string.replace(/[.*+?^${}()|[\]\\]/g, '\\$&');
      }
    }
    // ------- Fonction de tri par ordre alphabÃ©tique -------
    const sortAzBtn = document.getElementById('sort-az');
    const sortZaBtn = document.getElementById('sort-za');
    
    function sortTable(ascending = true) {
      const tbody = table.querySelector('tbody');
      const rows = Array.from(tbody.querySelectorAll('tr'));
      
      // Trier les lignes
      rows.sort((a, b) => {
        const textA = a.querySelector('td:first-child').textContent.trim().toLowerCase();
        const textB = b.querySelector('td:first-child').textContent.trim().toLowerCase();
        return ascending ? textA.localeCompare(textB, 'es') : textB.localeCompare(textA, 'es');
      });
      
      // Vider et reconstruire le tbody avec les lignes triÃ©es
      rows.forEach(row => tbody.appendChild(row));
      
      // Mise Ã  jour visuelle des boutons
      sortAzBtn.classList.toggle('active', ascending);
      sortZaBtn.classList.toggle('active', !ascending);
      
      // Mise Ã  jour du style des boutons
      sortAzBtn.classList.toggle('btn-primary', ascending);
      sortAzBtn.classList.toggle('btn-outline-primary', !ascending);
      sortZaBtn.classList.toggle('btn-primary', !ascending);
      sortZaBtn.classList.toggle('btn-outline-primary', ascending);
      
      // Animation subtile des lignes pour indiquer le changement
      rows.forEach((row, index) => {
        row.style.opacity = '0';
        row.style.transform = 'translateY(10px)';
        row.style.transition = 'opacity 0.2s ease, transform 0.2s ease';
        
        setTimeout(() => {
          row.style.opacity = '1';
          row.style.transform = 'translateY(0)';
        }, 50 + (index * 10)); // Effet cascade
      });
    }
    
    if (sortAzBtn) {
      sortAzBtn.addEventListener('click', function() {
        sortTable(true);
      });
    }
    
    if (sortZaBtn) {
      sortZaBtn.addEventListener('click', function() {
        sortTable(false);
      });
    }
    
    // Initialiser avec un tri A-Z par dÃ©faut
    if (allRows.length > 0) {
      sortTable(true);
    }
  });
</script>

<!-- CSS supplÃ©mentaire pour la recherche instantanÃ©e et le tri -->
<style>
  /* Animation pour les lignes correspondant Ã  la recherche */
  .search-highlight {
    animation: highlight-pulse 1s ease;
  }
  
  @keyframes highlight-pulse {
    0% { background-color: rgba(63, 81, 181, 0.1); }
    100% { background-color: transparent; }
  }
  
  /* Animation pour la surbrillance du texte */
  mark {
    padding: 0 2px;
    border-radius: 2px;
    animation: mark-pulse 1.5s infinite alternate;
  }
  
  @keyframes mark-pulse {
    0% { background-color: rgba(63, 81, 181, 0.1); }
    100% { background-color: rgba(63, 81, 181, 0.2); }
  }
  
  /* Style pour l'input de recherche */
  #word-search {
    padding-right: 30px;
    transition: all 0.3s;
  }
  
  #word-search:focus {
    box-shadow: 0 0 0 0.2rem rgba(63, 81, 181, 0.25);
    border-color: var(--primary-color);
  }
  
  #word-search:focus + i {
    color: var(--primary-color);
  }
  
  /* Animation pour indiquer un changement de tri */
  .btn-group .btn.active {
    box-shadow: none;
  }
  
  @keyframes pulse {
    0% { transform: scale(1); }
    50% { transform: scale(1.05); }
    100% { transform: scale(1); }
  }
  
  .sort-animation {
    animation: pulse 0.3s ease;
  }
</style>        
        <!-- Pagination et contrÃ´les -->
        <div class="d-flex justify-content-between align-items-center mb-3">
          <!-- Nombre de lignes par page -->
          <form method="get" action="/espagnol/" class="d-flex align-items-center">
            <label for="limit" class="me-2">Lignes par page :</label>
            <select name="limit" id="limit" class="form-select" style="width: auto;" onchange="this.form.submit()">
              <option value="10" <% if (limit === 10) { %>selected<% } %>>10</option>
              <option value="20" <% if (limit === 20) { %>selected<% } %>>20</option>
              <option value="50" <% if (limit === 50) { %>selected<% } %>>50</option>
            </select>
            <input type="hidden" name="tag" value="<%= tag_filter %>">
            <input type="hidden" name="rating" value="<%= rating_filter %>">
          </form>
          
          <!-- Mini pagination -->
          <div class="d-flex align-items-center">
            <% if (page > 1) { %>
              <a href="/espagnol/?page=<%= page - 1 %>&limit=<%= limit %>&tag=<%= tag_filter %>&rating=<%= rating_filter %>" class="btn btn-sm btn-outline-primary me-2">
                <i class="fas fa-chevron-left"></i> PrÃ©cÃ©dent
              </a>
            <% } %>
            <span class="px-2">Page <%= page %> / <%= total_pages %></span>
            <% if (page < total_pages) { %>
              <a href="/espagnol/?page=<%= page + 1 %>&limit=<%= limit %>&tag=<%= tag_filter %>&rating=<%= rating_filter %>" class="btn btn-sm btn-outline-primary ms-2">
                Suivant <i class="fas fa-chevron-right"></i>
              </a>
            <% } %>
          </div>
        </div>

        <!-- Tableau de vocabulaire -->
        <div class="table-responsive">
          <table id="vocab-table" class="table-custom">
            <thead>
              <tr>
                <th>Mot</th>
                <th>SynthÃ¨se</th>
                <th>Image</th>
                <th>Youglish</th>
                <th>Son</th>
                <th>Tags</th>
                <th>Note</th>
                <th style="width: 80px; text-align: center;">Action</th>
              </tr>
            </thead>
            <tbody>
              <% words.forEach(function(word) { %>
              <tr data-id="<%= word.id %>">
                <td class="editable" data-field="word">
                  <%- word.word %>
                  <!-- IcÃ´ne visible seulement sur mobile -->
                  <a href="/espagnol/word/<%= word.id %>" title="Voir dÃ©tails" class="ms-2 d-md-none" onclick="event.stopPropagation()">
                    <i class="fas fa-info-circle"></i>
                  </a>
                </td>
                
                <td class="editable" data-field="synthese"><%- word.synthese %></td>
                <td data-field="image">
                  <% if (word.image) { %>
                    <img src="<%= word.image %>"
                         alt="Image de <%= word.word %>"
                         class="rounded img-thumbnail open-image-modal"
                         style="max-width:50px; cursor:pointer;"
                         data-bs-toggle="modal"
                         data-bs-target="#imageModal"
                         data-image="<%= word.image %>"
                         onclick="event.stopPropagation()">
                  <% } else { %>
                    <i class="fa-solid fa-image text-muted"></i>
                  <% } %>
                </td>
                
                <td data-field="youglish">
                  <!-- Lien Youglish existant -->
                  <a href="javascript:void(0);" onclick="window.open('<%= word.youglish %>', '', 'width=800,height=600');" title="Voir sur Youglish" class="btn btn-sm btn-outline-primary">
                    <i class="fa-solid fa-globe"></i>
                  </a>
                
                  <% 
                  let infinitive = word.word.toLowerCase();
                  if (infinitive.endsWith('ar') || infinitive.endsWith('er') || infinitive.endsWith('ir')) { 
                  %>
                    <br>
                    <a href="https://www.spanishdict.com/conjugate/<%= infinitive %>"
                      onclick="window.open(this.href, 'conjugation','width=1200,height=900'); return false;"
                      title="Conjugaison sur SpanishDict"
                      class="btn btn-sm btn-outline-secondary mt-1">
                      <i class="fa-solid fa-pen"></i>
                    </a>
                  <% } %>
                </td>
                
                <td>
                  <button class="btn btn-sm btn-outline-primary play-btn" onclick="playAudio('<%= word.word %>')" title="Lire">
                    <i class="fa-solid fa-play"></i>
                  </button>
                </td>
                <td class="editable" data-field="tags"><%- word.tags %></td>
                <td>
                  <div class="star-rating-custom" data-id="<%= word.id %>">
                    <% 
                    let note = word.note || 0;
                    for (let i = 1; i < 5; i++) { 
                    %>
                      <span class="star<% if (i <= note) { %> selected<% } %>" data-value="<%= i %>">â</span>
                    <% } %>
                  </div>
                </td>
                <td style="text-align: center;">
                  <button class="action-btn delete" data-id="<%= word.id %>" title="Supprimer">
                    <i class="fa-solid fa-trash"></i>
                  </button>
                </td>
              </tr>
              <% }); %>
            </tbody>
          </table>
        </div>
        
        <!-- Pagination complÃ¨te -->
        <div class="pagination-custom mt-4">
          <% if (page > 1) { %>
            <a href="/espagnol/?page=1&limit=<%= limit %>&tag=<%= tag_filter %>&rating=<%= rating_filter %>" title="PremiÃ¨re page">
              <i class="fas fa-angle-double-left"></i>
            </a>
            <a href="/espagnol/?page=<%= page - 1 %>&limit=<%= limit %>&tag=<%= tag_filter %>&rating=<%= rating_filter %>" title="Page prÃ©cÃ©dente">
              <i class="fas fa-angle-left"></i>
            </a>
          <% } %>
          
          <% 
          let start = Math.max(1, page - 2);
          let end = Math.min(total_pages, page + 2);
          
          if (start > 1) { 
          %>
            <span>...</span>
          <% } %>
          
          <% for (let p = start; p <= end; p++) { %>
            <% if (p === page) { %>
              <span><%= p %></span>
            <% } else { %>
              <a href="/espagnol/?page=<%= p %>&limit=<%= limit %>&tag=<%= tag_filter %>&rating=<%= rating_filter %>"><%= p %></a>
            <% } %>
          <% } %>
          
          <% if (end < total_pages) { %>
            <span>...</span>
          <% } %>
          
          <% if (page < total_pages) { %>
            <a href="/espagnol/?page=<%= page + 1 %>&limit=<%= limit %>&tag=<%= tag_filter %>&rating=<%= rating_filter %>" title="Page suivante">
              <i class="fas fa-angle-right"></i>
            </a>
            <a href="/espagnol/?page=<%= total_pages %>&limit=<%= limit %>&tag=<%= tag_filter %>&rating=<%= rating_filter %>" title="DerniÃ¨re page">
              <i class="fas fa-angle-double-right"></i>
            </a>
          <% } %>
        </div>
      </div>
      
      <!-- Onglet ajout de mot -->
      <div class="tab-pane fade" id="add-word" role="tabpanel" aria-labelledby="add-word-tab">
        <div class="card card-custom">
          <div class="card-header-custom">
            <h4 class="mb-0"><i class="fas fa-plus-circle me-2"></i>Ajouter un nouveau mot</h4>
          </div>
          <div class="card-body-custom">
            <form id="add-word-form" 
                  action="/espagnol/add" 
                  method="post" 
                  class="needs-validation" 
                  enctype="multipart/form-data" 
                  novalidate>
              <div class="row">
                <div class="col-md-6">
                  <div class="form-group-custom">
                    <label for="word" class="form-label">Mot :</label>
                    <input type="text" id="word" name="word" class="form-control-custom" required>
                    <div class="invalid-feedback">Veuillez entrer un mot</div>
                  </div>
                
                  <div class="form-group-custom">
                    <label for="tags">Tags :</label>
                    <select id="tags" name="tags" multiple class="form-control-custom">
                      <% available_tags.forEach(function(tag) { %>
                        <option value="<%= tag %>"><%= tag %></option>
                      <% }); %>
                    </select>
                    <small class="text-muted">Maintenez Ctrl (ou Cmd) pour sÃ©lectionner plusieurs tags</small>
                  </div>
                  
                  <div class="form-group-custom">
                    <label for="youglish">Lien Youglish :</label>
                    <input type="url" id="youglish" name="youglish" class="form-control-custom">
                    <small class="text-muted">GÃ©nÃ©rÃ© automatiquement Ã  partir du mot</small>
                  </div>
                  
                  <div class="form-group-custom">
                    <label for="image">Image :</label>
                    <input type="file" id="image" name="image" accept="image/*" class="form-control">
                  </div>
                </div>
                
                <div class="col-md-6">
                  <div class="form-group-custom">
                    <label for="synthese">SynthÃ¨se :</label>
                    <div id="synthese-editor" class="editor-container" style="height: 150px;"></div>
                  </div>
                  
                  <div class="form-check mb-3">
                    <input type="checkbox" id="disable-auto-synthese" name="disable_auto_synthese" class="form-check-input">
                    <label class="form-check-label" for="disable-auto-synthese">
                      Ne pas gÃ©nÃ©rer automatiquement la synthÃ¨se
                    </label>
                  </div>
                </div>
              </div>
              <input type="hidden" name="synthese" id="hidden-synthese">

              <!-- Conteneur de la barre de progression -->
              <div id="progress-bar-container" style="display: none; margin-bottom: 15px;">
                <div class="progress">
                  <div id="progress-bar" class="progress-bar progress-bar-striped progress-bar-animated" role="progressbar"
                       style="width: 0%;" aria-valuemin="0" aria-valuemax="100">0%</div>
                </div>
              </div>

              <div class="d-grid mt-4">
                <button type="submit" class="btn btn-custom-primary">
                  <i class="fas fa-save me-2"></i>Ajouter le mot
                </button>
              </div>
            </form>
          </div>
        </div>
      </div>
    </div>
  </div>
  
  <!-- FenÃªtre modale pour Ã©diter le contenu -->
  <div id="editModal" class="modal">
    <div class="modal-content">
      <div class="d-flex justify-content-between align-items-center mb-3">
        <h3 class="m-0">Modifier le contenu</h3>
        <span class="close">&times;</span>
      </div>
      <div id="modal-editor" style="height: 200px;"></div>
      <div id="modal-tags" style="display: none;">
        <select id="modal-tags-select" multiple class="form-control mt-3" style="width: 100%; height: 200px;">
          <% available_tags.forEach(function(tag) { %>
            <option value="<%= tag %>"><%= tag %></option>
          <% }); %>
        </select>
      </div>
      <button id="save-button" class="btn btn-custom-primary mt-4 float-end">
        <i class="fas fa-save me-2"></i>Sauvegarder
      </button>
    </div>
  </div>
  
  <!-- FenÃªtre modale pour confirmer la suppression -->
  <div id="deleteModal" class="modal">
    <div class="modal-content" style="max-width: 400px;">
      <div class="d-flex justify-content-between align-items-center mb-3">
        <h3 class="m-0">Confirmation</h3>
        <span class="close">&times;</span>
      </div>
      <p>Ãtes-vous sÃ»r de vouloir supprimer ce mot ?</p>
      <div class="d-flex justify-content-end mt-4">
        <button id="cancel-delete" class="btn btn-outline-secondary me-2">Annuler</button>
        <button id="confirm-delete" class="btn btn-danger">
          <i class="fas fa-trash me-2"></i>Supprimer
        </button>
      </div>
    </div>
  </div>
  
  <!-- Footer -->
  <footer class="footer-custom">
    <div class="container">
      <div class="row">
        <div class="col-md-6 text-md-start text-center mb-3 mb-md-0">
          <h5>Navigation rapide</h5>
          <div class="d-flex flex-column flex-md-row justify-content-md-start justify-content-center">
            <a href="/espagnol/" class="me-md-3">Vocabulaire</a>
            <a href="/espagnol/flashcard" class="me-md-3">Flash Cards</a>
            <a href="/espagnol/dialogues" class="me-md-3">Dialogues</a>
            <a href="/espagnol/stories">Histoires</a>
          </div>
        </div>
        <div class="col-md-6 text-md-end text-center">
          <p class="mb-0">Â© <%= new Date().getFullYear() %> Apprendre l'Espagnol - Tous droits rÃ©servÃ©s</p>
        </div>
      </div>
    </div>
  </footer>
  
  <!-- Modal d'aperÃ§u d'image -->
  <div class="modal fade" id="imageModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg">
      <div class="modal-content">
        <div class="modal-header">
          <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
        </div>
        <div class="modal-body text-center">
          <img id="modalImage" class="img-fluid" style="max-width:80%; max-height:80vh;" alt="AperÃ§u image">
        </div>
      </div>
    </div>
  </div>

  <!-- Script pour gÃ©nÃ©rer automatiquement le lien Youglish dans le formulaire -->
  <script>
    document.getElementById('word').addEventListener('input', function() {
      let wordVal = this.value.trim();
      if (wordVal) {
        document.getElementById('youglish').value = "https://youglish.com/pronounce/" 
                                                  + encodeURIComponent(wordVal) 
                                                  + "/spanish";
      } else {
        document.getElementById('youglish').value = "";
      }
    });
  </script>
  
  <!-- jQuery (nÃ©cessaire pour Bootstrap) -->
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  
  <!-- Bootstrap JS -->
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  <script>
    document.querySelectorAll('.open-image-modal').forEach(img =>
      img.addEventListener('click', e =>
        document.getElementById('modalImage').src = e.currentTarget.dataset.image
      )
    );
  </script>
  
  <!-- Quill JS -->
  <script src="https://cdn.quilljs.com/1.3.7/quill.min.js"></script>
  
  <!-- Script pour Amazon Polly TTS -->
  <script>
    // Variables pour la gestion de l'audio
    let currentAudio = null;
    let currentVoice = 'Lucia'; // Voix par dÃ©faut, sera mise Ã  jour

    // Fonction pour charger la voix prÃ©fÃ©rÃ©e au chargement de la page
    document.addEventListener('DOMContentLoaded', async function() {
      try {
        const response = await fetch('/espagnol/api/voice-settings/default');
        if (response.ok) {
          const data = await response.json();
          currentVoice = data.voice;
          console.log('Voix par dÃ©faut chargÃ©e:', currentVoice);
          
          // Mettre Ã  jour le sÃ©lecteur de voix
          const voiceSelector = document.getElementById('voice-selector');
          if (voiceSelector) {
            voiceSelector.value = currentVoice;
          }
        }
      } catch (error) {
        console.error('Erreur lors du chargement de la voix par dÃ©faut:', error);
      }
      
      // Initialisation de l'Ã©diteur Quill pour la synthÃ¨se
      const quillSynthese = new Quill('#synthese-editor', {
        theme: 'snow',
        modules: {
          toolbar: [
            [{ 'color': [] }, { 'background': [] }],
            ['bold', 'italic', 'underline'],
            [{ header: [1, 2, 3, false] }],
            [{ list: 'ordered' }, { list: 'bullet' }],
            ['link']
          ]
        }
      });
      
      // Initialisation de l'Ã©diteur modal pour l'Ã©dition
      const quillModal = new Quill('#modal-editor', {
        theme: 'snow',
        modules: {
          toolbar: [
            [{ 'color': [] }, { 'background': [] }],
            ['bold', 'italic', 'underline'],
            [{ header: [1, 2, 3, false] }],
            [{ list: 'ordered' }, { list: 'bullet' }],
            ['link']
          ]
        }
      });
      
      let currentWordId = null;
      let currentField = null;
      let currentCell = null;
      
      // Gestion du formulaire d'ajout
      document.addEventListener('DOMContentLoaded', function() {
        // Gestion du formulaire d'ajout de mot - version simplifiÃ©e
        var form = document.getElementById('add-word-form');
        var hiddenSynthese = document.getElementById('hidden-synthese');
          
        if (form) {
          form.addEventListener('submit', function(e) {
            // EmpÃªcher la soumission du formulaire si le champ mot est vide
            var wordField = document.getElementById('word');
            if (!wordField.value.trim()) {
              e.preventDefault();
              alert('Veuillez entrer un mot');
              return false;
            }
            
            // RÃ©cupÃ©rer le contenu de l'Ã©diteur Quill et l'insÃ©rer dans le champ cachÃ©
            var quillEditor = Quill.find(document.querySelector('#synthese-editor'));
            if (quillEditor) {
              hiddenSynthese.value = quillEditor.root.innerHTML;
            }
            
            // Afficher une indication visuelle que le formulaire est en cours d'envoi
            var submitButton = form.querySelector('button[type="submit"]');
            submitButton.disabled = true;
            submitButton.innerHTML = '<i class="fas fa-spinner fa-spin me-2"></i>Ajout en cours...';
            
            // Laisser le formulaire se soumettre normalement
          });
        }
        
        // Gestion du formulaire d'ajout
        const addWordForm = document.getElementById('add-word-form');
        if (addWordForm) {
          addWordForm.addEventListener('submit', function(e) {
            e.preventDefault();
            const submitButton = addWordForm.querySelector('button[type="submit"]');
            submitButton.disabled = true;
            submitButton.innerHTML = '<i class="fas fa-spinner fa-spin me-2"></i>Ajout en cours...';
            
            const word = document.getElementById('word').value.trim();
            if (!word) {
              alert('Veuillez entrer un mot');
              submitButton.disabled = false;
              submitButton.innerHTML = '<i class="fas fa-save me-2"></i>Ajouter le mot';
              return;
            }
            
            // Pour un formulaire avec fichier, nous devons utiliser FormData
            const formData = new FormData();
            formData.append('word', word);
            
            // RÃ©cupÃ©ration du contenu de l'Ã©diteur Quill pour la synthÃ¨se
            const synthese = document.querySelector('#synthese-editor .ql-editor').innerHTML;
            formData.append('synthese', synthese);
            
            const youglish = document.getElementById('youglish').value.trim();
            formData.append('youglish', youglish);
            
            const tagsSelect = document.getElementById('tags');
            const selectedTags = Array.from(tagsSelect.selectedOptions).map(option => option.value);
            formData.append('tags', selectedTags.join(', '));
            
            // Case Ã  cocher pour dÃ©sactiver la gÃ©nÃ©ration automatique
            const disableAutoSynthese = document.getElementById('disable-auto-synthese').checked;
            formData.append('disable_auto_synthese', disableAutoSynthese);
            
            // Gestion du fichier image
            const imageInput = document.getElementById('image');
            if (imageInput.files.length > 0) {
              formData.append('image', imageInput.files[0]);
            }
            
            // Obtenir l'URL correcte Ã  partir de l'attribut action du formulaire
            const formAction = "/espagnol/add";
            
            // Envoi des donnÃ©es via fetch
            fetch(formAction, {
              method: 'POST',
              body: formData  // Ne pas dÃ©finir de Content-Type, le navigateur le fera automatiquement avec le bon boundary
            })
            .then(response => {
              if (!response.ok) {
                throw new Error('Erreur rÃ©seau: ' + response.status);
              }
              return response.json();
            })
            .then(data => {
              if (data.status === 'success') {
                // Afficher un message de succÃ¨s
                const successAlert = document.createElement('div');
                successAlert.className = 'alert alert-success alert-dismissible fade show';
                successAlert.innerHTML = `
                  <strong>SuccÃ¨s!</strong> Le mot "${word}" a Ã©tÃ© ajoutÃ© avec succÃ¨s.
                  <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                `;
                addWordForm.insertAdjacentElement('beforebegin', successAlert);
                
                // RÃ©initialiser le formulaire
                addWordForm.reset();
                const quillEditor = Quill.find(document.querySelector('#synthese-editor'));
                if (quillEditor) {
                  quillEditor.setText('');
                }
                
                // RÃ©activer le bouton
                submitButton.disabled = false;
                submitButton.innerHTML = '<i class="fas fa-save me-2"></i>Ajouter le mot';
                
                // Recharger la liste aprÃ¨s 2 secondes - utiliser une redirection explicite
                setTimeout(() => {
                window.location.href = "/espagnol/";  // URL explicite vers la page d'accueil
                }, 2000);
              } else {
                console.error('Erreur lors de l\'ajout:', data.message);
                alert('Erreur lors de l\'ajout: ' + (data.message || 'Une erreur est survenue'));
                submitButton.disabled = false;
                submitButton.innerHTML = '<i class="fas fa-save me-2"></i>Ajouter le mot';
              }
            })
            .catch(error => {
              console.error('Erreur:', error);
              alert('Erreur lors de l\'ajout du mot: ' + error.message);
              submitButton.disabled = false;
              submitButton.innerHTML = '<i class="fas fa-save me-2"></i>Ajouter le mot';
            });
          });
        }
      });
      
      // Gestion de l'Ã©dition via la modale pour les cellules Ã©ditables
      document.querySelectorAll('td.editable').forEach(cell => {
        cell.addEventListener('click', function(e) {
          currentWordId = cell.closest('tr').getAttribute('data-id');
          currentField = cell.getAttribute('data-field');
          currentCell = cell;
          
          if (currentField === 'image') {
            const fileInput = document.createElement('input');
            fileInput.type = 'file';
            fileInput.accept = 'image/*';
            fileInput.onchange = function() {
              const file = fileInput.files[0];
              if (file) {
                const reader = new FileReader();
                reader.onload = function(event) {
                  const newImageData = event.target.result;
                  fetch('/espagnol/update_word', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ id: currentWordId, field: 'image', value: newImageData })
                  })
                  .then(response => response.json())
                  .then(data => {
                    if (data.status === 'success') {
                      currentCell.innerHTML = `<img src="${newImageData}" alt="Image" style="max-width:50px; max-height:50px; cursor:pointer;" class="rounded">`;
                    } else {
                      console.error('Erreur lors de la mise Ã  jour de l\'image');
                      alert('Erreur lors de la mise Ã  jour de l\'image');
                    }
                  })
                  .catch(error => {
                    console.error('Erreur:', error);
                    alert('Erreur lors de la mise Ã  jour de l\'image');
                  });
                };
                reader.readAsDataURL(file);
              }
            };
            fileInput.click();
            return;
          }
          
          const modal = document.getElementById('editModal');
          
          if (currentField === 'tags') {
            document.getElementById('modal-editor').style.display = 'none';
            document.getElementById('modal-tags').style.display = 'block';
            const currentTags = cell.innerHTML.replace(/<[^>]*>/g, '').split(',').map(t => t.trim());
            const select = document.getElementById('modal-tags-select');
            Array.from(select.options).forEach(option => {
              option.selected = currentTags.includes(option.value);
            });
          } else {
            document.getElementById('modal-tags').style.display = 'none';
            document.getElementById('modal-editor').style.display = 'block';
            quillModal.clipboard.dangerouslyPasteHTML(cell.innerHTML);
          }
          
          modal.style.display = 'block';
        });
      });
      
      // Gestion de la fermeture des modales
      document.querySelectorAll('.modal .close').forEach(closeBtn => {
        closeBtn.addEventListener('click', function() {
          this.closest('.modal').style.display = 'none';
        });
      });
      
      // Fermer les modales en cliquant en dehors
      window.addEventListener('click', function(event) {
        if (event.target.classList.contains('modal')) {
          event.target.style.display = 'none';
        }
      });
      
      // Sauvegarde des modifications depuis la modale
      document.getElementById('save-button').addEventListener('click', function() {
        let formattedContent;
        if (currentField === 'tags') {
          const select = document.getElementById('modal-tags-select');
          const selectedTags = Array.from(select.selectedOptions).map(option => option.value);
          formattedContent = selectedTags.join(', ');
        } else {
          formattedContent = quillModal.root.innerHTML;
        }
        
        // Envoyer les modifications au serveur
        fetch('/espagnol/update_word', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ id: currentWordId, field: currentField, value: formattedContent })
        })
        .then(response => response.json())
        .then(data => {
          if (data.status === 'success') {
            // Mettre Ã  jour la cellule avec le nouveau contenu
            currentCell.innerHTML = formattedContent;
            document.getElementById('editModal').style.display = 'none';
            
            // Afficher un message de succÃ¨s temporaire
            const successToast = document.createElement('div');
            successToast.className = 'position-fixed bottom-0 end-0 p-3';
            successToast.style.zIndex = '5';
            successToast.innerHTML = `
              <div class="toast align-items-center text-white bg-success border-0" role="alert" aria-live="assertive" aria-atomic="true">
                <div class="d-flex">
                  <div class="toast-body">
                    <i class="fas fa-check-circle me-2"></i>Modification enregistrÃ©e
                  </div>
                  <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
                </div>
              </div>
            `;
            document.body.appendChild(successToast);
            
            // Afficher le toast
            const toast = new bootstrap.Toast(successToast.querySelector('.toast'), { delay: 3000 });
            toast.show();
            
            // Supprimer le toast aprÃ¨s sa disparition
            setTimeout(() => {
              successToast.remove();
            }, 3500);
          } else {
            console.error('Erreur lors de la mise Ã  jour');
            alert('Erreur lors de la mise Ã  jour: ' + (data.message || 'Une erreur est survenue'));
          }
        })
        .catch(error => {
          console.error('Erreur:', error);
          alert('Erreur lors de la mise Ã  jour du contenu');
        });
      });
      
      // Configuration de la suppression d'un mot
      let wordIdToDelete = null;
      
      document.querySelectorAll('.delete').forEach(button => {
        button.addEventListener('click', function() {
          wordIdToDelete = this.getAttribute('data-id');
          const deleteModal = document.getElementById('deleteModal');
          deleteModal.style.display = 'block';
        });
      });
      
      // Annuler la suppression
      document.getElementById('cancel-delete').addEventListener('click', function() {
        document.getElementById('deleteModal').style.display = 'none';
        wordIdToDelete = null;
      });
      
      // Confirmer la suppression
      document.getElementById('confirm-delete').addEventListener('click', function() {
        if (!wordIdToDelete) return;
        
        const btn = this;
        btn.disabled = true;
        btn.innerHTML = '<i class="fas fa-spinner fa-spin me-2"></i>Suppression...';
        
        fetch('/espagnol/delete_word', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ id: wordIdToDelete })
        })
        .then(response => response.json())
        .then(data => {
          if (data.status === 'success') {
            // Fermer la modale
            document.getElementById('deleteModal').style.display = 'none';
            
            // Supprimer visuellement la ligne du mot
            const row = document.querySelector(`tr[data-id="${wordIdToDelete}"]`);
            if (row) {
              row.style.backgroundColor = '#ffdddd';
              row.style.transition = 'opacity 0.5s';
              row.style.opacity = '0';
              setTimeout(() => {
                row.remove();
              }, 500);
            }
            
            // Afficher un message de succÃ¨s
            const successToast = document.createElement('div');
            successToast.className = 'position-fixed bottom-0 end-0 p-3';
            successToast.style.zIndex = '5';
            successToast.innerHTML = `
              <div class="toast align-items-center text-white bg-success border-0" role="alert" aria-live="assertive" aria-atomic="true">
                <div class="d-flex">
                  <div class="toast-body">
                    <i class="fas fa-check-circle me-2"></i>Mot supprimÃ© avec succÃ¨s
                  </div>
                  <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
                </div>
              </div>
            `;
            document.body.appendChild(successToast);
            
            // Afficher le toast
            const toast = new bootstrap.Toast(successToast.querySelector('.toast'), { delay: 3000 });
            toast.show();
            
            // Supprimer le toast aprÃ¨s sa disparition
            setTimeout(() => {
              successToast.remove();
              
              // Si la table est vide, recharger la page
              if (document.querySelectorAll('#vocab-table tbody tr').length <= 1) {
                location.reload();
              }
            }, 3500);
          } else {
            console.error("Erreur lors de la suppression:", data.message);
            alert("Erreur lors de la suppression: " + (data.message || "Une erreur est survenue"));
            btn.disabled = false;
            btn.innerHTML = '<i class="fas fa-trash me-2"></i>Supprimer';
          }
        })
        .catch(error => {
          console.error("Erreur:", error);
          alert("Erreur lors de la suppression");
          btn.disabled = false;
          btn.innerHTML = '<i class="fas fa-trash me-2"></i>Supprimer';
        });
      });
      
      // Gestion de la notation par Ã©toiles
      document.querySelectorAll('.star-rating-custom').forEach(ratingDiv => {
        ratingDiv.querySelectorAll('.star').forEach(starElem => {
          starElem.addEventListener('click', function() {
            const ratingValue = parseInt(starElem.getAttribute('data-value'));
            const wordId = ratingDiv.getAttribute('data-id');
            
            // Mettre Ã  jour visuellement les Ã©toiles
            ratingDiv.querySelectorAll('.star').forEach(s => {
              if (parseInt(s.getAttribute('data-value')) <= ratingValue) {
                s.classList.add('selected');
              } else {
                s.classList.remove('selected');
              }
            });
            
            // Envoyer la mise Ã  jour au serveur
            fetch('/espagnol/update_note', {
              method: 'POST',
              headers: { 'Content-Type': 'application/json' },
              body: JSON.stringify({ id: wordId, note: ratingValue })
            })
            .then(response => response.json())
            .then(data => {
              if (data.status !== 'success') {
                console.error('Erreur lors de l\'enregistrement de la note');
                alert('Erreur lors de l\'enregistrement de la note');
              }
            })
            .catch(error => {
              console.error('Erreur:', error);
              alert('Erreur lors de l\'enregistrement de la note');
            });
          });
        });
      });
    });

    // Fonction pour jouer l'audio via Amazon Polly
    async function playAudio(word) {
      // ArrÃªter l'audio en cours s'il y en a un
      if (currentAudio) {
        currentAudio.pause();
        currentAudio = null;
      }
      
      try {
        // Afficher un indicateur de chargement Ã  cÃ´tÃ© du bouton
        const button = event.currentTarget;
        const originalIcon = button.innerHTML;
        button.innerHTML = '<i class="fa-solid fa-spinner fa-spin"></i>';
        button.disabled = true;
        
        // Faire la requÃªte Ã  l'API Polly
        const response = await fetch('/espagnol/api/polly/speak', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({
            text: word,
            voice: currentVoice,
            language: 'es-ES'
          })
        });
        
        if (!response.ok) {
          throw new Error(`Erreur HTTP: ${response.status}`);
        }
        
        // Convertir la rÃ©ponse en blob audio
        const audioBlob = await response.blob();
        const audioUrl = URL.createObjectURL(audioBlob);
        
        // CrÃ©er et jouer l'Ã©lÃ©ment audio
        currentAudio = new Audio(audioUrl);
        
        // ÃvÃ©nement de fin de lecture
        currentAudio.onended = function() {
          currentAudio = null;
          // Nettoyer l'URL
          URL.revokeObjectURL(audioUrl);
          // Restaurer l'Ã©tat du bouton
          button.innerHTML = originalIcon;
          button.disabled = false;
        };
        
        // ÃvÃ©nement d'erreur
        currentAudio.onerror = function(e) {
          console.error('Erreur de lecture audio:', e);
          currentAudio = null;
          // Nettoyer l'URL
          URL.revokeObjectURL(audioUrl);
          // Restaurer l'Ã©tat du bouton
          button.innerHTML = originalIcon;
          button.disabled = false;
        };
        
        // Lancer la lecture
        await currentAudio.play();
      } catch (error) {
        console.error('Erreur lors de la synthÃ¨se vocale:', error);
        alert('Erreur lors de la lecture audio. Veuillez rÃ©essayer.');
        
        // Restaurer l'Ã©tat du bouton en cas d'erreur
        if (event && event.currentTarget) {
          event.currentTarget.innerHTML = '<i class="fa-solid fa-play"></i>';
          event.currentTarget.disabled = false;
        }
      }
    }

    // Fonction pour sÃ©lectionner une voix diffÃ©rente
    function setPollyVoice(voice) {
      currentVoice = voice;
      
      // Sauvegarder la prÃ©fÃ©rence via une requÃªte API
      fetch('/espagnol/api/voice-settings', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          voice_a: voice,
          voice_b: voice
        })
      })
      .then(response => {
        if (response.ok) {
          // Afficher une confirmation visuelle que la voix a Ã©tÃ© changÃ©e
          const voiceSelector = document.getElementById('voice-selector');
          const originalBg = voiceSelector.style.backgroundColor;
          
          voiceSelector.style.backgroundColor = '#d4edda';
          setTimeout(() => {
            voiceSelector.style.backgroundColor = originalBg;
          }, 500);
        }
      })
      .catch(error => {
        console.error('Erreur lors de la sauvegarde de la prÃ©fÃ©rence de voix:', error);
      });
    }
  </script>

  <script>
    // VÃ©rification de doublon lors du quitter du champ "word"
    document.getElementById('word').addEventListener('blur', function() {
      const wordValue = this.value.trim();
      if (!wordValue) return;
      fetch("/espagnol/check_duplicate", {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ word: wordValue })
      })
      .then(response => response.json())
      .then(data => {
        if (data.status === 'duplicate') {
          alert("Ce mot existe dÃ©jÃ  : " + data.word.word);
        }
      })
      .catch(error => console.error('Erreur lors de la vÃ©rification du doublon:', error));
    });
  </script>
  <script src="/static/js/progress.js"></script>

</body>
</html>